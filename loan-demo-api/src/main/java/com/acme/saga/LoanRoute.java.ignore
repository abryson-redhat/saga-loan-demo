package com.acme.saga;

import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.model.rest.RestParamType;
import org.springframework.stereotype.Component;
import org.springframework.context.annotation.Primary;
import org.springframework.context.annotation.Bean;
import org.openapitools.model.*;
import org.apache.camel.model.rest.RestBindingMode;
import org.apache.camel.Exchange;
import org.apache.camel.LoggingLevel;
import org.springframework.http.converter.json.Jackson2ObjectMapperBuilder;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.openapitools.jackson.nullable.JsonNullableModule;


@Component
public class LoanRoute extends RouteBuilder {
    
    @Override
    public void configure() throws Exception {
 
         /**
        GET /saga/loan : retrieves an array of loan
        **/
        rest()
            .get("/saga/api/loan")
                .description("retrieves a loan")
                .id("getLoanApi")
                .produces("application/json")
                .outType(Loan[].class)
                .param()
                    .name("searchString")
                    .type(RestParamType.query)
                    .required(false)
                    .description("pass an optional search string for looking up loans")
                .endParam()
                .param()
                    .name("skip")
                    .type(RestParamType.query)
                    .required(false)
                    .description("number of records to skip for pagination")
                .endParam()
                .param()
                    .name("limit")
                    .type(RestParamType.query)
                    .required(false)
                    .description("maximum number of records to return")
                .endParam()
                .to("direct:searchLoans");

        /**
        POST /saga/loan : adds a loan
        **/
        rest()
            .post("/saga/api/loan")
                .description("adds a loan")
                .id("addLoanApi")
                .consumes("application/json")
                .type(Loan.class)
                
                .param()
                    .name("loan")
                    .type(RestParamType.body)
                    .required(false)
                    .description("Loan to add")
                .endParam()
                .to("direct:addLoan");

        /**
        DELETE /saga/loan : deletes a loan
        **/
        rest()
            .delete("/saga/api/loan")
                .description("deletes a loan")
                .id("deleteLoanApi")
                .consumes("application/json")
                .type(Loan.class)
                
                .param()
                    .name("loan")
                    .type(RestParamType.body)
                    .required(false)
                    .description("Loan to delete")
                .endParam()
                .to("direct:deleteLoan");

        from("direct:searchLoans")
                .process( exchange -> {
                    log.info("searchApplicants-> searchString: " + exchange.getIn().getHeader("searchString"));
                    log.info("searchApplicants-> limit: " + exchange.getIn().getHeader("limit"));
                    exchange.getMessage().setBody("this is a test");         // must return a body, otherwise 500                 
                    exchange.getMessage().setHeader(Exchange.HTTP_RESPONSE_CODE, 200);
                })
                .log("Search loans invoked...");           

        from("direct:addLoan")
                .process( exchange -> {
                    Loan loan = (Loan) exchange.getIn().getBody(Loan.class);
                    log.info("loan->id: " + loan.getId().toString() + 
                             ", amount: " + loan.getAmount().toString() +
                             ", applicantId: " + loan.getApplicantId().toString() +
                             ", approved: " + loan.getApproved().toString() +
                             ", loanRequestDate: " + loan.getLoanRequestDate().toString());  
                    exchange.getMessage().setHeader(Exchange.HTTP_RESPONSE_CODE, 200);                           
                })
                .log("Loan added...");    

        from("direct:deleteLoan")
                .log("invoked deleteLoan...");
    }


}
