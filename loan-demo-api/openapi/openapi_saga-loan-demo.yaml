openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: Saga Loan Demo API
    url: https://virtserver.swaggerhub.com/BRYSONIIIANDY/SagaLoan/1.0.0
info:
  description: Saga Loan Demo API
  version: "1.0.0"
  title: Saga Loan Demo API
  contact:
    email: abryson@redhat.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /saga/loan:
    get:
      tags:
        - developers
      summary: searches loans
      operationId: searchLoans
      description: |
        By passing in the appropriate options, you can search for
        available loans in the system
      parameters:
        - in: query
          name: searchString
          description: pass an optional search string for looking up loans
          required: false
          schema:
            type: string
        - in: query
          name: skip
          description: number of records to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Loan'
        '400':
          description: bad input parameter
    post:
      tags:
        - admins
      summary: adds a loan
      operationId: addLoan
      description: Adds a loan to the system
      responses:
        '201':
          description: loan created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing loan already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
        description: Loan to add
  /saga/applicant:
    get:
      tags:
        - developers
      summary: searches applicants
      operationId: searchApplicants
      description: |
        By passing in the appropriate options, you can search for
        available applicants in the system
      parameters:
        - in: query
          name: searchString
          description: pass an optional search string for looking up loans
          required: false
          schema:
            type: string
        - in: query
          name: skip
          description: number of records to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Loan'
        '400':
          description: bad input parameter
    post:
      tags:
        - admins
      summary: adds an applicant
      operationId: addApplicant
      description: Adds an applicant to the system
      responses:
        '201':
          description: applicant created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing applicant already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Applicant'
        description: Applicant to add
  /saga/createloan:
    post:
      tags:
        - admins
      summary: creates a loan request
      operationId: createLoan
      description: Adds a loan request to the system
      responses:
        '201':
          description: loan request created
        '400':
          description: 'invalid input, object invalid'
        '410':
          description: loan request denied
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanRequest'
        description: Loan request
components:
  schemas:
    Applicant:
      type: object
      required:
        - id
        - limit
        - approved
      properties:
        id:
          type: integer
          minimum: 1
          maximum: 2147483647
        limit:
          type: number
          multipleOf: 0.01
        approved:
          type: boolean
        limitUpdateDate:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
          nullable: true
        comment:
          type: string
          maxLength: 256
          nullable: true
        loan:
          $ref: '#/components/schemas/Applicant'
    Loan:
      required:
        - id
        - amount
        - applicantId
        - approved
      properties:
        id:
          type: integer
          minimum: 1
          maximum: 2147483647   
        amount:
          type: number
          multipleOf: 0.01   
        applicantId:
          type: integer
          minimum: 1
          maximum: 2147483647  
        approved:
          type: boolean
        loanRequestDate:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
          nullable: true
        loanCancelDate:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'  
          nullable: true
        loanApprovalDate:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'   
          nullable: true
        comment:
          type: string
          maxLength: 256
          nullable: true
      type: object
    LoanRequest:
      required:
        - loanId
        - amount
      properties:
        loanId:
          type: integer
          minimum: 1
          maximum: 2147483647   
        amount:
          type: number
          multipleOf: 0.01   
      type: object
